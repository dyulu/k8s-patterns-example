# kubectl apply -f nfs-persistent-volume.yaml
# kubectl get pv
#    NAME     CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM             STORAGECLASS   REASON   AGE
#    nfs-pv   1Gi        RWX            Retain           Bound    default/nfs-pvc                           13s
# kubectl get pvc
#    NAME      STATUS   VOLUME   CAPACITY   ACCESS MODES   STORAGECLASS   AGE
#    nfs-pvc   Bound    nfs-pv   1Gi        RWX                           15s
# kubectl get all
#    NAME                READY   STATUS    RESTARTS   AGE
#    pod/nginx-nfs-pod   1/1     Running   0          22s
# kubectl exec -it nginx-nfs-pod -- sh
#    ls -lart /usr/share/nginx/html
#
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nfs-pv
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  storageClassName: nfs
  mountOptions:
    - hard
    - nfsvers=3.0
  accessModes:      # used as labels to match a PV and a PVC; do not define any form of access control.
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain  # retain: preserve the volume after the pods
  nfs:                                   # volume type: nfs plugin in this case
    # nfs://nfs_server_ip/mnt/nfs/
    path: /mnt/nfs
    server: nfs_server_ip                # replace with nfs_server_ip
    readOnly: false

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs-pvc
spec:
  storageClassName: nfs
  accessModes:
  - ReadWriteMany   # accessModes do not enforce access right, but rather act as labels to match a PV to a PVC
  resources:
     requests:
       storage: 1Gi

---
apiVersion: v1
kind: Pod
metadata:
  name: nginx-nfs-pod
  labels:
    name: nginx-nfs-pod
spec:
  containers:
    - name: nginx-nfs-pod
      image: fedora/nginx
      ports:
        - name: web
          containerPort: 80
      volumeMounts:
        - name: nfsvol
          mountPath: /usr/share/nginx/html
      securityContext:
          privileged: false
  volumes:
    - name: nfsvol
      persistentVolumeClaim:
        claimName: nfs-pvc

